require "awesome_print"
require "open-uri"
require "nokogiri"
require "pry"
require "uri"

# This file parses Craigslist's full city list and rewrites the
# :city_name => "citysubdomain" Craig::CITIES hash. We only care about urls
# that we can't guess.

cities_path = "lib/craig/cities.rb"
url = "http://www.craigslist.org/about/sites"
dom = Nokogiri::HTML(open(url))

# Get diff of two Hashes
class Hash
  def diff(other)
    self.keys.inject({}) do |memo, key|
      unless self[key] == other[key]
        memo[key] = [self[key], other[key]]
      end
      memo
    end
  end
end

class Node
  def initialize(node)
    @node = node
  end
  def a
    @node.at_css("a")
  end
  def city_underscored  # "del rio / eagle pass" => "del_rio_eagle_pass"
    city.gsub(/\W+/, " ").strip.gsub(/ /, "_")
  end
  def city_compressed # "del rio / eagle pass" => "delrioeaglepass"
    city.gsub(/\W+/, "")
  end
  def city
    a.text.strip.downcase
  end
  def subdomain # "http://austin.craigslist.org" => "austin"
    URI.parse(a[:href]).host.split(".").first
  end
  def to_s
    "'city' => #{city_compressed}, 'sub' => #{subdomain}"
  end
end

nodes = dom.css(".colleft li").map {|n| Node.new(n) }
same, diff = nodes.partition { |n| n.city_compressed == n.subdomain }
pairs = diff.map { |node| [node.city_underscored, node.subdomain] }

rebuilt_cities_hash = Hash[pairs]
existing_cities_hash = eval(File.read(cities_path)) rescue nil
abort "Nothing to change." if rebuilt_cities_hash == existing_cities_hash

puts "City hash has changed. Updating #{cities_path}"
puts "\n\nDifference:\n\n"
ap rebuilt_cities_hash.diff(existing_cities_hash)

prefix = <<-EOS
# Generated by update_cities.rb
# Date: #{Time.now.strftime("%d %b %Y")}
#
# Total Craigslist cities: #{same.count}
# Hash size:               #{diff.count}

module Craig
  CITIES = {
EOS

suffix = <<-EOS

  }
end
EOS

#module Craig
#  CITIES = {
#    "newcastle_ne_england" => "newcastle",
#    "anchorage_mat_su" => "anchorage",
#    ...
#  }
#end

File.open(cities_path, "w") do |f|
  f << prefix
  diff.each do |node|
    f << %{    "#{node.city_underscored}" => "#{node.subdomain}"} +
      (diff.last===node ? "" : ",\n")
  end
  f << suffix
end
